/* tslint:disable */
/* eslint-disable */
/**
 * DuckDuckFit Exercise Database API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@duckduckfit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArticleTranslation } from './ArticleTranslation';
import {
    ArticleTranslationFromJSON,
    ArticleTranslationFromJSONTyped,
    ArticleTranslationToJSON,
    ArticleTranslationToJSONTyped,
} from './ArticleTranslation';

/**
 * 
 * @export
 * @interface Article
 */
export interface Article {
    /**
     * 
     * @type {number}
     * @memberof Article
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Article
     */
    key: string;
    /**
     * 
     * @type {string}
     * @memberof Article
     */
    image?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Article
     */
    thumbnailImage?: string | null;
    /**
     * 
     * @type {ArticleTranslation}
     * @memberof Article
     */
    translation?: ArticleTranslation | null;
    /**
     * 
     * @type {Array<ArticleTranslation>}
     * @memberof Article
     */
    translations?: Array<ArticleTranslation>;
}

/**
 * Check if a given object implements the Article interface.
 */
export function instanceOfArticle(value: object): value is Article {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('key' in value) || value['key'] === undefined) return false;
    return true;
}

export function ArticleFromJSON(json: any): Article {
    return ArticleFromJSONTyped(json, false);
}

export function ArticleFromJSONTyped(json: any, ignoreDiscriminator: boolean): Article {
    if (json == null) {
        return json;
    }
    return {

        'id': json['id'],
        'key': json['key'],
        'image': json['image'] == null ? null : json['image'],
        'thumbnailImage': json['thumbnail_image'] == null ? null : json['thumbnail_image'],
        'translation': json['translation'] == null ? null : ArticleTranslationFromJSON(json['translation']),
        'translations': json['translations'] == null ? null : ((json['translations'] as Array<any>).map(ArticleTranslationFromJSON)),
    };
}

export function ArticleToJSON(json: any): Article {
    return ArticleToJSONTyped(json, false);
}

export function ArticleToJSONTyped(value?: Article | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'id': value['id'],
        'key': value['key'],
        'image': value['image'],
        'thumbnail_image': value['thumbnailImage'],
        'translation': ArticleTranslationToJSON(value['translation']),
        'translations': value['translations'] == null ? null : ((value['translations'] as Array<any>).map(ArticleTranslationToJSON)),
    };
}

