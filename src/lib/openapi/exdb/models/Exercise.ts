/* tslint:disable */
/* eslint-disable */
/**
 * DuckDuckFit Exercise Database API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@duckduckfit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExerciseTranslation } from './ExerciseTranslation';
import {
    ExerciseTranslationFromJSON,
    ExerciseTranslationFromJSONTyped,
    ExerciseTranslationToJSON,
    ExerciseTranslationToJSONTyped,
} from './ExerciseTranslation';

/**
 * 
 * @export
 * @interface Exercise
 */
export interface Exercise {
    /**
     * 
     * @type {number}
     * @memberof Exercise
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Exercise
     */
    guid: string;
    /**
     * url safe unique resource identifier
     * @type {string}
     * @memberof Exercise
     */
    uri: string;
    /**
     * 
     * @type {string}
     * @memberof Exercise
     */
    image?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Exercise
     */
    thumbnailImage?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Exercise
     */
    execution: ExerciseExecutionTypeEnum;
    /**
     * 
     * @type {ExerciseTranslation}
     * @memberof Exercise
     */
    translation?: ExerciseTranslation | null;
    /**
     * 
     * @type {Array<ExerciseTranslation>}
     * @memberof Exercise
     */
    translations?: Array<ExerciseTranslation>;
    /**
     * 
     * @type {Date}
     * @memberof Exercise
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Exercise
     */
    createdAt: Date;
}


/**
 * @export
 */
export const ExerciseExecutionTypeEnum = {
    WeightReps: 'WEIGHT_REPS',
    RepsOnly: 'REPS_ONLY',
    Duration: 'DURATION',
    WeightDuration: 'WEIGHT_DURATION',
    DistanceDuration: 'DISTANCE_DURATION',
    Distance: 'DISTANCE',
    WeightDistance: 'WEIGHT_DISTANCE'
} as const;
export type ExerciseExecutionTypeEnum = typeof ExerciseExecutionTypeEnum[keyof typeof ExerciseExecutionTypeEnum];


/**
 * Check if a given object implements the Exercise interface.
 */
export function instanceOfExercise(value: object): value is Exercise {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('guid' in value) || value['guid'] === undefined) return false;
    if (!('uri' in value) || value['uri'] === undefined) return false;
    if (!('execution' in value) || value['execution'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function ExerciseFromJSON(json: any): Exercise {
    return ExerciseFromJSONTyped(json, false);
}

export function ExerciseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Exercise {
    if (json == null) {
        return json;
    }
    return {

        'id': json['id'],
        'guid': json['guid'],
        'uri': json['uri'],
        'image': json['image'] == null ? undefined : json['image'],
        'thumbnailImage': json['thumbnail_image'] == null ? undefined : json['thumbnail_image'],
        'execution': json['execution'],
        'translation': json['translation'] == null ? undefined : ExerciseTranslationFromJSON(json['translation']),
        'translations': json['translations'] == null ? undefined : ((json['translations'] as Array<any>).map(ExerciseTranslationFromJSON)),
        'updatedAt': (new Date(json['updated_at'])),
        'createdAt': (new Date(json['created_at'])),
    };
}

export function ExerciseToJSON(json: any): Exercise {
    return ExerciseToJSONTyped(json, false);
}

export function ExerciseToJSONTyped(value?: Exercise | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'id': value['id'],
        'guid': value['guid'],
        'uri': value['uri'],
        'image': value['image'],
        'thumbnail_image': value['thumbnailImage'],
        'execution': value['execution'],
        'translation': ExerciseTranslationToJSON(value['translation']),
        'translations': value['translations'] == null ? undefined : ((value['translations'] as Array<any>).map(ExerciseTranslationToJSON)),
        'updated_at': ((value['updatedAt']).toISOString()),
        'created_at': ((value['createdAt']).toISOString()),
    };
}

