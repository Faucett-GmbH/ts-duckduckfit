/* tslint:disable */
/* eslint-disable */
/**
 * DuckDuckFit Exercise Database API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@duckduckfit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ArticleTranslation
 */
export interface ArticleTranslation {
    /**
     * 
     * @type {number}
     * @memberof ArticleTranslation
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ArticleTranslation
     */
    uri: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleTranslation
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleTranslation
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleTranslation
     */
    content: string;
    /**
     * 
     * @type {string}
     * @memberof ArticleTranslation
     */
    locale?: string | null;
}

/**
 * Check if a given object implements the ArticleTranslation interface.
 */
export function instanceOfArticleTranslation(value: object): value is ArticleTranslation {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('uri' in value) || value['uri'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    return true;
}

export function ArticleTranslationFromJSON(json: any): ArticleTranslation {
    return ArticleTranslationFromJSONTyped(json, false);
}

export function ArticleTranslationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArticleTranslation {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'uri': json['uri'],
        'title': json['title'],
        'description': json['description'],
        'content': json['content'],
        'locale': json['locale'] == null ? undefined : json['locale'],
    };
}

export function ArticleTranslationToJSON(json: any): ArticleTranslation {
    return ArticleTranslationToJSONTyped(json, false);
}

export function ArticleTranslationToJSONTyped(value?: ArticleTranslation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'uri': value['uri'],
        'title': value['title'],
        'description': value['description'],
        'content': value['content'],
        'locale': value['locale'],
    };
}

