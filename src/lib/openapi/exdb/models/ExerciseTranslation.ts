/* tslint:disable */
/* eslint-disable */
/**
 * DuckDuckFit Exercise Database API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: contact@duckduckfit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExerciseTranslation
 */
export interface ExerciseTranslation {
    /**
     * 
     * @type {number}
     * @memberof ExerciseTranslation
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ExerciseTranslation
     */
    guid: string;
    /**
     * url safe unique resource identifier
     * @type {string}
     * @memberof ExerciseTranslation
     */
    uri: string;
    /**
     * 
     * @type {string}
     * @memberof ExerciseTranslation
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ExerciseTranslation
     */
    locale: ExerciseTranslationLocaleEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof ExerciseTranslation
     */
    metadataKeywords?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ExerciseTranslation
     */
    metadataAuthors?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ExerciseTranslation
     */
    alternativeNames?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ExerciseTranslation
     */
    videoUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExerciseTranslation
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExerciseTranslation
     */
    summary?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExerciseTranslation
     */
    instructions?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExerciseTranslation
     */
    tips?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ExerciseTranslation
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExerciseTranslation
     */
    createdAt: Date;
}


/**
 * @export
 */
export const ExerciseTranslationLocaleEnum = {
    En: 'en',
    De: 'de',
    Es: 'es'
} as const;
export type ExerciseTranslationLocaleEnum = typeof ExerciseTranslationLocaleEnum[keyof typeof ExerciseTranslationLocaleEnum];


/**
 * Check if a given object implements the ExerciseTranslation interface.
 */
export function instanceOfExerciseTranslation(value: object): value is ExerciseTranslation {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('guid' in value) || value['guid'] === undefined) return false;
    if (!('uri' in value) || value['uri'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('locale' in value) || value['locale'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function ExerciseTranslationFromJSON(json: any): ExerciseTranslation {
    return ExerciseTranslationFromJSONTyped(json, false);
}

export function ExerciseTranslationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExerciseTranslation {
    if (json == null) {
        return json;
    }
    return {

        'id': json['id'],
        'guid': json['guid'],
        'uri': json['uri'],
        'name': json['name'],
        'locale': json['locale'],
        'metadataKeywords': json['metadata_keywords'] == null ? null : json['metadata_keywords'],
        'metadataAuthors': json['metadata_authors'] == null ? null : json['metadata_authors'],
        'alternativeNames': json['alternative_names'] == null ? null : json['alternative_names'],
        'videoUrl': json['video_url'] == null ? null : json['video_url'],
        'description': json['description'] == null ? null : json['description'],
        'summary': json['summary'] == null ? null : json['summary'],
        'instructions': json['instructions'] == null ? null : json['instructions'],
        'tips': json['tips'] == null ? null : json['tips'],
        'updatedAt': (new Date(json['updated_at'])),
        'createdAt': (new Date(json['created_at'])),
    };
}

export function ExerciseTranslationToJSON(json: any): ExerciseTranslation {
    return ExerciseTranslationToJSONTyped(json, false);
}

export function ExerciseTranslationToJSONTyped(value?: ExerciseTranslation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'id': value['id'],
        'guid': value['guid'],
        'uri': value['uri'],
        'name': value['name'],
        'locale': value['locale'],
        'metadata_keywords': value['metadataKeywords'],
        'metadata_authors': value['metadataAuthors'],
        'alternative_names': value['alternativeNames'],
        'video_url': value['videoUrl'],
        'description': value['description'],
        'summary': value['summary'],
        'instructions': value['instructions'],
        'tips': value['tips'],
        'updated_at': ((value['updatedAt']).toISOString()),
        'created_at': ((value['createdAt']).toISOString()),
    };
}

